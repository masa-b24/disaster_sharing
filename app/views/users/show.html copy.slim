.auth_title
  section
    - if user_signed_in? && current_user.id.to_s == params[:id]
      h3
        | マイページ
    - else
      h3
        | 他人ページ
.row
  aside.col-md-3
    section.user_info
      - if current_user.avatar.attached?
        = image_tag current_user.avatar, class: "trim-image-to-circle-l"
      - else
        = image_pack_tag 'default.png', class: "trim-image-to-circle-l"
      h6 = current_user.name
      = link_to 'プロフィールの変更▶︎', profiles_path, class: 'd-block'
      = link_to '投稿する', new_post_path, class: 'btn btn-primary d-grid gap-2'
      
    .search-functionWrap
      h6 表示選択
      ul
        li = link_to "今月の投稿", "#"
        li = link_to "先月以前の投稿", "#"
        li = link_to "いいねしている投稿", "#"

      
  .col-md-9.recent_popular_post
    h5 今月の投稿
    .row
      - @post.current_month.sorted.each do |post|
        .col-md-2.border_post
          aside.avatarwrap.col-md-3
            - if post.user.avatar.attached?
              = image_tag post.user.avatar, class: "trim-image-to-circle-s"
            - else
              = image_pack_tag 'default.png', class: "trim-image-to-circle-s"
        .col-md-10.border_post
          .postwrap
            .titlewrap.d-block
              = link_to post.title, post_path(post)
              = l post.created_at, format: :short
              = link_to "削除", post_path(post), method: :delete, data: { confirm: "投稿「#{post.title}」を削除します。よろしいですか？" }
            .contentwrap
              = post.content
            .imageswrap
              - if post.images.attached?
                - post.images.each do |image|
                  = image_tag image.variant(resize_to_fill: [150, 150])
    h5 先月以前の投稿
    .row
      - @post.last_month.sorted.each do |post|
        .col-md-2.border_post
          aside.avatarwrap.col-md-3
            - if post.user.avatar.attached?
              = image_tag post.user.avatar, class: "trim-image-to-circle-s"
            - else
              = image_tag 'default.png', class: "trim-image-to-circle^s"

        .col-md-10.border_post
          .postwrap
            .titlewrap.d-block
              = link_to post.title, post_path(post)
              = l post.created_at, format: :short
              = link_to "削除", post_path(post), method: :delete, data: { confirm: "投稿「#{post.title}」を削除します。よろしいですか？" }
            .contentwrap
              = post.content
            .imageswrap
              - if post.images.attached?
                - post.images.each do |image|
                  = image_tag image.variant(resize_to_fill: [150, 150])
            .sub-informationWrap
              small コメント：
              small 参考になった：
              small タグ：
              - if post.tag_list.present?
                - post.tags.each do |tag|
                  = link_to tag, home_path(tag: tag.name)
              - else
                span タグはありません
    h5 いいねしている投稿
    .row
      - @user.liked_posts.each do |post|
        .col-md-2.border_post
          aside.avatarwrap.col-md-3
            - if post.user.avatar.attached?
              = image_tag post.user.avatar, class: "trim-image-to-circle-s"
            - else
              = image_pack_tag 'default.png', class: "trim-image-to-circle-s"

        .col-md-10.border_post
          .postwrap
            .titlewrap.d-block
              = link_to post.title, post_path(post)
              = l post.created_at, format: :short
              = link_to "削除", post_path(post), method: :delete, data: { confirm: "投稿「#{post.title}」を削除します。よろしいですか？" }
            .contentwrap
              = post.content
            .imageswrap
              - if post.images.attached?
                - post.images.each do |image|
                  = image_tag image.variant(resize_to_fill: [150, 150])
            .sub-informationWrap
              small コメント：
              small 参考になった：
              small タグ：
              - if post.tag_list.present?
                - post.tags.each do |tag|
                  = link_to tag, home_path(tag: tag.name)
              - else
                span タグはありません
